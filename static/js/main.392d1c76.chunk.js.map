{"version":3,"sources":["Pages/Login/Login.js","actions/participantActions.js","actions/types.js","actions/sentimentActions.js","Pages/Turnip/Turnip.js","App.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Login","dispatch","useDispatch","history","useHistory","useState","pid","setPid","error","setError","countDown","setCountDown","isDisabled","setIsDisabled","checkPID","test","localStorage","setItem","type","payload","setParticipantId","push","useEffect","utcStartTime","Date","toUTCString","checkTime","setInterval","utcCurrentTime","valid","distance","parse","days","Math","floor","hours","minutes","seconds","display","clearInterval","className","style","color","autoFocus","placeholder","onChange","e","target","value","marginBottom","onClick","disabled","ADD_SENTIMENT","addSentiment","sentiment","sentimentScore","systemTime","number","mediaTime","startTime","Turnip","time","useSelector","state","user","participantId","setMediaTime","setStartTime","setSentimentScore","idleTime","setIdleTime","totalSeconds","String","padStart","formattedTime","idleTimer","window","onbeforeunload","document","addEventListener","console","log","key","keyCode","preventDefault","interval","axios","post","then","res","data","catch","err","setSentimentNumber","id","url","controls","width","height","playing","onReady","onProgress","playedSeconds","paddingTop","paddingBottom","textAlign","min","max","step","parseInt","list","ticks","i","createTicks","App","exact","path","initialState","intervalTime","rootReducer","action","d","n","toISOString","slice","replace","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.392d1c76.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setParticipantId } from \"../../actions/participantActions\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [pid, setPid] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [countDown, setCountDown] = useState(\"\");\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n  const checkPID = (pid) => {\r\n    const myRe = /^PID\\d{5}$/;\r\n    if (pid === \"\") {\r\n      setError(\"You need to enter a participant ID\");\r\n    } else if (myRe.test(pid) === false) {\r\n      setError(\"You must enter a valid PID\");\r\n    } else {\r\n      dispatch(setParticipantId(pid));\r\n      history.push(\"/turnip\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startTime = new Date('June 10, 2021 14:45:00 PDT');\r\n    const utcStartTime = startTime.toUTCString();\r\n\r\n    const checkTime = setInterval(() => {\r\n      const currentTime = new Date();\r\n      const utcCurrentTime = currentTime.toUTCString();\r\n      const valid = utcStartTime === utcCurrentTime;\r\n\r\n      const distance = Date.parse(utcStartTime) - Date.parse(utcCurrentTime);\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      const display = `${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n      setCountDown(display);\r\n\r\n      if(valid) {\r\n        setIsDisabled(false);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(checkTime);\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h1 className=\"title\">\r\n            Welcome to the dial testing portion of the study!\r\n          </h1>\r\n          <div className=\"input-container\">\r\n            <p style={{ color: \"black\" }}>Please enter your Participant ID:</p>\r\n            <form>\r\n              <input\r\n                autoFocus\r\n                type=\"text\"\r\n                placeholder=\"PID12345\"\r\n                onChange={(e) => setPid(e.target.value)}\r\n                value={pid}\r\n                className=\"pid-input\"\r\n              />\r\n\r\n              {error ? (\r\n                <p style={{ color: \"red\", marginBottom: 5 }}>{error}</p>\r\n              ) : null}\r\n\r\n              <button onClick={() => checkPID(pid)} className=\"submit-button\" disabled={isDisabled}>\r\n                { isDisabled ?  \"Session starts in: \" + countDown  : \"Enter\" }\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const setParticipantId = (pid) => {\r\n  localStorage.setItem('pid', pid);\r\n  return {\r\n    type: 'GET_PID',\r\n    payload: pid\r\n  }\r\n}","export const ADD_SENTIMENT_STARTED = 'ADD_SENTIMENT_STARTED'\r\nexport const ADD_SENTIMENT = 'ADD_SENTIMENT'\r\nexport const ADD_SENTIMENT_FAILURE = 'ADD_SENTIMENT_FAILURE'\r\nexport const GET_SENTIMENT = 'GET_SENTIMENT'","import axios from 'axios'\r\n\r\nimport { ADD_SENTIMENT } from './types';\r\n\r\nexport const setSentimentNumber = (number, user, time, mediaTime, startTime) => {\r\n  return dispatch => {\r\n    axios.post(`https://turnip3-api.azurewebsites.net/turnip`,\r\n      {\r\n        sentimentScore: number,\r\n        systemTime: time,\r\n        participantId: user,\r\n        mediaTime: mediaTime,\r\n        startTime: startTime\r\n      })\r\n      .then(res => {\r\n        dispatch(addSentiment(res.data))\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error @sentimentAction: \", err);\r\n      })\r\n  }\r\n}\r\n\r\nconst addSentiment = sentiment => ({\r\n  type: ADD_SENTIMENT,\r\n  payload: {\r\n    sentimentScore: sentiment.sentimentScore,\r\n    systemTime: sentiment.systemTime,\r\n    number: sentiment.number,\r\n    mediaTime: sentiment.mediaTime,\r\n    startTime: sentiment.startTime\r\n  }\r\n})","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./styles.css\";\r\nimport { setSentimentNumber } from \"../../actions/sentimentActions\";\r\n\r\nfunction Turnip() {\r\n  const time = useSelector((state) => state.systemTime);\r\n  const user = useSelector((state) => state.participantId);\r\n  const [mediaTime, setMediaTime] = useState();\r\n  const [startTime, setStartTime] = useState();\r\n  const [sentimentScore, setSentimentScore] = useState(50);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  let totalSeconds = mediaTime;\r\n  let hours = Math.floor(totalSeconds / 3600);\r\n  totalSeconds %= 3600;\r\n  let minutes = Math.floor(totalSeconds / 60);\r\n  let seconds = Math.floor(totalSeconds % 60);\r\n\r\n  // Convert the time to pretty stuff\r\n  minutes = String(minutes).padStart(2, \"0\");\r\n  hours = String(hours).padStart(2, \"0\");\r\n  seconds = String(seconds).padStart(2, \"0\");\r\n  const formattedTime = hours + \":\" + minutes + \":\" + seconds;\r\n\r\n  useEffect(() => {\r\n    const idleTimer = setInterval(() => {\r\n      setIdleTime((idleTime) => idleTime + 1);\r\n    }, 1000);\r\n    return () => clearInterval(idleTimer);\r\n  }, [idleTime]);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = confirmExit;\r\n    function confirmExit() {\r\n      return \"Show Warning\";\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      console.log(`Key: ${e.key} -- KeyCode: ${e.keyCode}`);\r\n      if (e.keyCode === 9 || e.keyCode === 33 || e.keyCode === 34) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    \r\n    const interval = setInterval(() => {\r\n      dispatch(\r\n        setSentimentNumber(sentimentScore, user, time, formattedTime, startTime)\r\n      );\r\n    }, 600);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch, user, time, mediaTime, formattedTime, startTime]);\r\n\r\n  const sentimentScoreSetting = (e) => {\r\n    e.preventDefault();\r\n    setSentimentScore(parseInt(e.target.value));\r\n    setIdleTime(0);\r\n  };\r\n\r\n  const createTicks = () => {\r\n    let ticks = [];\r\n\r\n    for (let i = 0; i < 101; i += 10) {\r\n      ticks.push(\r\n        <span key={i} className=\"tick\">\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return ticks;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"video-container\">\r\n        <div id=\"overlay\"></div>\r\n        <ReactPlayer\r\n          url=\"https://www.youtube.com/watch?v=Wu7872A0hd4&list=PLU12uITxBEPHOJO1FU8qll6gQmKcXp5S7&index=23\"\r\n          controls={false}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          playing={true}\r\n          onReady={(e) => setStartTime(Date())}\r\n          onProgress={(e) => {\r\n            setMediaTime(e.playedSeconds)\r\n          }}\r\n        />\r\n      </div>\r\n      {idleTime > 20 && idleTime < 120 ? (\r\n        <h1 className=\"warning pulsate\">\r\n          Is your interest rating still {sentimentScore}?\r\n        </h1>\r\n      ) : idleTime >= 120 ? (\r\n        <h1 className=\"warning pulsate\">\r\n          You haven't been active for over 2 minutes. Is your interest rating\r\n          still {sentimentScore}?{\" \"}\r\n        </h1>\r\n      ) : (\r\n        <h1 style={{ paddingTop: \"15px\", paddingBottom: \"15px\" }}>\r\n          How interested are you? {sentimentScore}\r\n        </h1>\r\n      )}\r\n\r\n      <div className=\"sentiment-container\">\r\n        <div className=\"smile-container\">\r\n          <i className=\"far fa-frown fa-3x\"></i>\r\n          <p style={{ textAlign: \"center\" }}>Not Interested</p>\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <input\r\n            className=\"slider\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={sentimentScore}\r\n            onChange={sentimentScoreSetting}\r\n            list=\"steplist\"\r\n            autoFocus\r\n          />\r\n          <div className=\"ticks\">{createTicks()}</div>\r\n        </div>\r\n        <div className=\"smile-container\">\r\n          <i className=\"far fa-smile fa-3x\"></i>\r\n          <p style={{ textAlign: \"center\" }}>Very Interested</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Turnip;\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Login from './Pages/Login/Login';\nimport Turnip from './Pages/Turnip/Turnip';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/turnip\">\n          <Turnip />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ADD_SENTIMENT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  participantId: \"\",\r\n  intervalTime: null,\r\n  sentimentScore: 50,\r\n  systemTime: null,\r\n  mediaTime: \"\",\r\n  startTime: null,\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_PID\":\r\n      return {\r\n        ...state,\r\n        participantId: action.payload,\r\n      };\r\n    case ADD_SENTIMENT:\r\n      let d = new Date();\r\n      let n = d.toISOString().slice(0, 19).replace(\"T\", \" \");\r\n      return {\r\n        ...state,\r\n        intervalTime: n,\r\n        sentimentScore: action.payload.sentimentScore,\r\n        systemTime: n,\r\n        mediaTime: action.payload.mediaTime,\r\n        startTime: action.payload.startTime,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}