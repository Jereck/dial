{"version":3,"sources":["Pages/Login/Login.js","actions/participantActions.js","actions/types.js","actions/sentimentActions.js","Pages/Turnip/Turnip.js","App.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Login","dispatch","useDispatch","history","useHistory","useState","pid","setPid","error","setError","isDisabled","checkPID","test","localStorage","setItem","type","payload","setParticipantId","push","useEffect","Date","toUTCString","className","style","color","autoFocus","placeholder","onChange","e","target","value","marginBottom","onClick","disabled","ADD_SENTIMENT","addSentiment","sentiment","sentimentScore","systemTime","number","mediaTime","startTime","Turnip","time","useSelector","state","user","participantId","setMediaTime","setStartTime","setSentimentScore","idleTime","setIdleTime","totalSeconds","hours","Math","floor","minutes","seconds","String","padStart","formattedTime","idleTimer","setInterval","clearInterval","window","onbeforeunload","document","addEventListener","console","log","key","keyCode","preventDefault","interval","axios","post","then","res","data","catch","err","setSentimentNumber","videoURL","process","VIDEO_URL","id","url","controls","width","height","playing","onReady","onProgress","playedSeconds","config","youtube","playerVars","disablekb","vimeo","cursor","paddingTop","paddingBottom","textAlign","min","max","step","parseInt","list","ticks","i","createTicks","App","exact","path","initialState","intervalTime","rootReducer","action","d","n","toISOString","slice","replace","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d81b370c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setParticipantId } from \"../../actions/participantActions\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [pid, setPid] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n  const checkPID = (pid) => {\r\n    const myRe = /^PID\\d{5}$/;\r\n    if (pid === \"\") {\r\n      setError(\"You need to enter a participant ID\");\r\n    } else if (myRe.test(pid) === false) {\r\n      setError(\"You must enter a valid PID\");\r\n    } else {\r\n      dispatch(setParticipantId(pid));\r\n      history.push(\"/turnip\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startTime = new Date('May 28, 2021 12:55:00');\r\n    const utcStartTime = startTime.toUTCString();\r\n\r\n    const currentTime = new Date();\r\n    const utcCurrentTime = currentTime.toUTCString();\r\n\r\n    const valid = utcStartTime < utcCurrentTime;\r\n\r\n    // if(valid) {\r\n    //   setIsDisabled(false);\r\n    // }\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h1 className=\"title\">\r\n            Welcome to the dial testing portion of the study!\r\n          </h1>\r\n          <div className=\"input-container\">\r\n            <p style={{ color: \"black\" }}>Please enter your Participant ID:</p>\r\n            <form>\r\n              <input\r\n                autoFocus\r\n                type=\"text\"\r\n                placeholder=\"PID12345\"\r\n                onChange={(e) => setPid(e.target.value)}\r\n                value={pid}\r\n                className=\"pid-input\"\r\n              />\r\n\r\n              {error ? (\r\n                <p style={{ color: \"red\", marginBottom: 5 }}>{error}</p>\r\n              ) : null}\r\n\r\n              <button onClick={() => checkPID(pid)} className=\"submit-button\" disabled={isDisabled}>\r\n                Enter\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const setParticipantId = (pid) => {\r\n  localStorage.setItem('pid', pid);\r\n  return {\r\n    type: 'GET_PID',\r\n    payload: pid\r\n  }\r\n}","export const ADD_SENTIMENT_STARTED = 'ADD_SENTIMENT_STARTED'\r\nexport const ADD_SENTIMENT = 'ADD_SENTIMENT'\r\nexport const ADD_SENTIMENT_FAILURE = 'ADD_SENTIMENT_FAILURE'\r\nexport const GET_SENTIMENT = 'GET_SENTIMENT'","import axios from 'axios'\r\n\r\nimport { ADD_SENTIMENT } from './types';\r\n\r\nexport const setSentimentNumber = (number, user, time, mediaTime, startTime) => {\r\n  return dispatch => {\r\n    axios.post(`https://turnip3-api.azurewebsites.net/turnip`,\r\n      {\r\n        sentimentScore: number,\r\n        systemTime: time,\r\n        participantId: user,\r\n        mediaTime: mediaTime,\r\n        startTime: startTime\r\n      })\r\n      .then(res => {\r\n        dispatch(addSentiment(res.data))\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error @sentimentAction: \", err);\r\n      })\r\n  }\r\n}\r\n\r\nconst addSentiment = sentiment => ({\r\n  type: ADD_SENTIMENT,\r\n  payload: {\r\n    sentimentScore: sentiment.sentimentScore,\r\n    systemTime: sentiment.systemTime,\r\n    number: sentiment.number,\r\n    mediaTime: sentiment.mediaTime,\r\n    startTime: sentiment.startTime\r\n  }\r\n})","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./styles.css\";\r\nimport { setSentimentNumber } from \"../../actions/sentimentActions\";\r\n\r\nfunction Turnip() {\r\n  const time = useSelector((state) => state.systemTime);\r\n  const user = useSelector((state) => state.participantId);\r\n  const [mediaTime, setMediaTime] = useState();\r\n  const [startTime, setStartTime] = useState();\r\n  const [sentimentScore, setSentimentScore] = useState(50);\r\n  const [idleTime, setIdleTime] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  let totalSeconds = mediaTime;\r\n  let hours = Math.floor(totalSeconds / 3600);\r\n  totalSeconds %= 3600;\r\n  let minutes = Math.floor(totalSeconds / 60);\r\n  let seconds = Math.floor(totalSeconds % 60);\r\n\r\n  // Convert the time to pretty stuff\r\n  minutes = String(minutes).padStart(2, \"0\");\r\n  hours = String(hours).padStart(2, \"0\");\r\n  seconds = String(seconds).padStart(2, \"0\");\r\n  const formattedTime = hours + \":\" + minutes + \":\" + seconds;\r\n\r\n  useEffect(() => {\r\n    const idleTimer = setInterval(() => {\r\n      setIdleTime((idleTime) => idleTime + 1);\r\n    }, 1000);\r\n    return () => clearInterval(idleTimer);\r\n  }, [idleTime]);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = confirmExit;\r\n    function confirmExit() {\r\n      return \"Show Warning\";\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      console.log(`Key: ${e.key} -- KeyCode: ${e.keyCode}`);\r\n      if (e.keyCode === 9 || e.keyCode === 33 || e.keyCode === 34) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dispatch(\r\n        setSentimentNumber(sentimentScore, user, time, formattedTime, startTime)\r\n      );\r\n    }, 600);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch, user, time, mediaTime, formattedTime, startTime]);\r\n\r\n  const sentimentScoreSetting = (e) => {\r\n    e.preventDefault();\r\n    setSentimentScore(parseInt(e.target.value));\r\n    setIdleTime(0);\r\n  };\r\n\r\n  const createTicks = () => {\r\n    let ticks = [];\r\n\r\n    for (let i = 0; i < 101; i += 10) {\r\n      ticks.push(\r\n        <span key={i} className=\"tick\">\r\n          {i}\r\n        </span>\r\n      );\r\n    }\r\n    return ticks;\r\n  };\r\n\r\n  const videoURL = process.env.VIDEO_URL\r\n  console.log(process.env.VIDEO_URL)\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"video-container\">\r\n        <div id=\"overlay\"></div>\r\n        <ReactPlayer\r\n          // url=\"https://vimeo.com/548821080\"\r\n          url={videoURL}\r\n          controls={false}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          playing={true}\r\n          onReady={() => setStartTime(Date())}\r\n          onProgress={(e) => setMediaTime(e.playedSeconds)}\r\n          config={{\r\n            youtube: {\r\n              playerVars: {\r\n                controls: 0,\r\n                disablekb: 1,\r\n              },\r\n            },\r\n            vimeo: {\r\n              controls: false,\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      {idleTime > 30 && idleTime < 120 ? (\r\n        <h1 className=\"warning\">\r\n          Is your interest rating still {sentimentScore}?\r\n        </h1>\r\n      ) : idleTime >= 120 ? (\r\n        <h1 className=\"warning\">\r\n          You haven't been active for over 2 minutes. Is your interest rating\r\n          still {sentimentScore}?{\" \"}\r\n          <span style={{ color: \"lightblue\", cursor: \"pointer\" }}>[Yes]</span>\r\n        </h1>\r\n      ) : (\r\n        <h1 style={{ paddingTop: \"15px\", paddingBottom: \"15px\" }}>\r\n          How interested are you? {sentimentScore}\r\n        </h1>\r\n      )}\r\n\r\n      <div className=\"sentiment-container\">\r\n        <div className=\"smile-container\">\r\n          <i className=\"far fa-frown fa-3x\"></i>\r\n          <p style={{ textAlign: \"center\" }}>Not Interested</p>\r\n        </div>\r\n        <div className=\"slider-container\">\r\n          <input\r\n            className=\"slider\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={sentimentScore}\r\n            onChange={sentimentScoreSetting}\r\n            list=\"steplist\"\r\n            autoFocus\r\n          />\r\n          <div className=\"ticks\">{createTicks()}</div>\r\n        </div>\r\n        <div className=\"smile-container\">\r\n          <i className=\"far fa-smile fa-3x\"></i>\r\n          <p style={{ textAlign: \"center\" }}>Very Interested</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Turnip;\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Login from './Pages/Login/Login';\nimport Turnip from './Pages/Turnip/Turnip';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/turnip\">\n          <Turnip />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ADD_SENTIMENT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  participantId: \"\",\r\n  intervalTime: null,\r\n  sentimentScore: 50,\r\n  systemTime: null,\r\n  mediaTime: \"\",\r\n  startTime: null,\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_PID\":\r\n      return {\r\n        ...state,\r\n        participantId: action.payload,\r\n      };\r\n    case ADD_SENTIMENT:\r\n      let d = new Date();\r\n      let n = d.toISOString().slice(0, 19).replace(\"T\", \" \");\r\n      return {\r\n        ...state,\r\n        intervalTime: n,\r\n        sentimentScore: action.payload.sentimentScore,\r\n        systemTime: n,\r\n        mediaTime: action.payload.mediaTime,\r\n        startTime: action.payload.startTime,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}